---
import Header from "@/components/organisms/Header.astro";
import Footer from "@/components/organisms/footer.astro";
import metaData from "@/seo/pagesMeta.json";
import Seo from "@/components/seo.astro";
import UnderConstrucction from "@/components/atoms/UnderConstrucction.astro";

import { getLangFromUrl, MetaManager, parseURL } from "@/i18n/utils";

// Supports weights 100-900
import "@fontsource-variable/noto-sans-lao-looped/wdth.css";

const URL = Astro.url;

const lang = getLangFromUrl(URL);

const parsedURL = parseURL(URL);
const layoutMetaManager = new MetaManager(metaData);
const { title, description } = layoutMetaManager.getMetaData(parsedURL);
const isDev = true;
---

<!doctype html>
<html lang={lang}>
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta name="lang" content={lang} />
    <meta name="description" content={description} />
    <meta name="author" content="@CaperAsDev" />
    <link rel="sitemap" href="/sitemap-index.xml" />

    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />

    <Seo
      title={title}
      description={description}
      image={{
        alt: "Bridge to science logo",
        src: "/BTS_LogoC-V.svg",
        height: "347",
        width: "334",
      }}
    />

    <title>{title}</title>
  </head>
  <body>
    {!isDev && <UnderConstrucction />}
    <Header lang={lang} />
    <slot />
    <Footer lang={lang} />
  </body>
</html>
<style is:global>
  @layer reset;

  :root {
    /* Font sizes */
    --fs-xl: clamp(2rem + 0.55vw, 2vw + 1.1rem, 4.5rem + 0.1vw);
    --fs-l: clamp(1.7rem + 0.45vw, 1.7vw + 0.9rem, 3.5rem + 0.1vw);
    --fs-m: clamp(1.35rem + 0.35vw, 1.35vw + 0.7rem, 2.5rem + 0.1vw);
    --fs-s: clamp(1rem + 0.25vw, 1vw + 0.5rem, 1.2rem + 0.1vw);
    --fs-xs: clamp(0.7rem + 0.15vw, 0.7vw + 0.3rem, 1rem + 0.1vw);

    /* Colors */
    --primary-0: #f2f2f2;
    --primary-1: #bfbfb8;
    --primary-2: #a3a69c;
    --primary-3: #4d5950;

    --secondary-0: #798645;
    --secondary-1: #35403a;
    --secondary-2: #232625;

    --terciary-0: #a7c6d9;
    --terciary-1: #049dbf;
    --terciary-2: #0378a6;
    --terciary-3: #193140;

    --dark-orange: #993e1d;
    /* --dark: #193140; */
    /* --dark: #1b1b1b; */
    /* --dark: #010118; */
    --dark: #222;
    --light: #fef7e0;
    --ligth: var(--light);

    /* --terciary-0: #5917db;
    --terciary-1: #a25bdf;
    --terciary-2: #d280d3; */

    /* Themes */
    --h-text-clr: light-dark(var(--dark), var(--primary-0));

    --bg-clr: light-dark(var(--light), var(--dark));
    --text-clr: light-dark(var(--dark), var(--light));

    --inverse-bg-clr: light-dark(var(--dark), var(--light));
    --inverse-text-clr: light-dark(var(--light), var(--dark));

    --dark-bg-clr: light-dark(var(--terciary-3), var(--dark-orange));
  }

  html {
    scroll-behavior: smooth;
    background-color: var(--bg-clr);
    color: var(--text-clr);
    font-family: "Noto Sans Lao Looped Variable", sans-serif;
  }
  /* Light Mode */
  [data-theme="light"] {
    color-scheme: light;
  }

  /* Dark Mode - forcing this, not advised to do this normally except you want to give your users the option to do so */
  [data-theme="dark"] {
    color-scheme: dark;
  }

  [data-theme="dark"] img.image.dark {
    display: block;
  }
  [data-theme="dark"] img.image.light {
    display: none;
  }
  [data-theme="light"] img.image.light {
    display: block;
  }
  [data-theme="light"] img.image.dark {
    display: none;
  }

  @layer reset {
    *,
    *::before,
    *::after {
      box-sizing: border-box;
    }

    * {
      margin: 0;
      padding: 0;
    }

    body {
      line-height: 1.5;
    }

    img,
    picture,
    video,
    canvas,
    svg {
      display: block;
      max-inline-size: 100%;
    }
    svg {
      stroke-width: 1px;

      &.sm {
        width: 1.5rem;
        height: 1.5rem;
      }
      &.md {
        width: 2rem;
        height: 2rem;
      }
      &.lg {
        width: 3rem;
        height: 3rem;
      }
    }

    p,
    a,
    span,
    div {
      font-size: var(--fs-s);
    }
    a {
      padding: 4px;
      text-decoration: none;
      color: inherit;

      &:focus {
        outline: 1px solid var(--terciary-1);
      }
    }

    input,
    button,
    textarea,
    select {
      font: inherit;
      letter-spacing: inherit;
      word-spacing: inherit;
      color: currentColor;
    }

    p,
    h1,
    h2,
    h3,
    h4,
    h5,
    h6 {
      overflow-wrap: break-word;
      font-size: var(--fs-s);
      font-weight: 300;
    }

    ol,
    ul {
      list-style: none;
    }

    :not([class]) {
      h1&,
      h2&,
      h3&,
      h4&,
      h5&,
      h6& {
        margin-block: 0.75em;
        line-height: 1.25;
        text-wrap: balance;
        letter-spacing: -0.05ch;
      }

      p&,
      ol&,
      ul& {
        margin-block: 1em;
      }

      ol&,
      ul& {
        padding-inline-start: 1.5em;
        list-style: revert;
      }

      li& {
        margin-block: 0.5em;
      }
    }
  }
</style>
