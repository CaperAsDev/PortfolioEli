---
import { selectImage } from "@/js/utils";

import allProjects from "@/data/Projects/index.json";
import ProjectCard from "@/components/molecules/ProjectCard.astro";
import type { PathKey } from "@/i18n/types";
import { getLangFromUrl } from "@/i18n/utils";

const thumbnails = Object.entries(
  import.meta.glob<{ default: ImageMetadata }>(
    "@/assets/images/blogs/thumbnails/*.{jpg,jpeg,png}",
    {
      eager: true,
    }
  )
);
const projects = allProjects.filter((project) => project.type === "Project");

const header = {
  es: {
    title: "Proyectos",
    description:
      "En esta sección compartimos proyectos comprometidos con generar un impacto positivo. Iniciativas que, a través del conocimiento científico, proponen formas de enfrentar problemáticas que nos afectan a todos. Te invitamos a conocer los desafíos que abordan, el enfoque que los guía y por qué son importantes para construir un cambio real.",
  },
  en: {
    title: "Projects",
    description:
      "This section features projects committed to creating positive impact. Through scientific knowledge, these initiatives explore ways to address challenges that affect us all. Discover the issues they tackle, the approaches they take, and why their work matters in building meaningful change.",
  },
  pt: {
    title: "Projetos",
    description:
      "Nesta seção, apresentamos projetos comprometidos com a geração de impacto positivo. Por meio do conhecimento científico, essas iniciativas buscam enfrentar desafios que dizem respeito a todos nós. Conheça as questões que abordam, as estratégias adotadas e a importância de seu trabalho na construção de mudanças reais.",
  },
};

const lang = getLangFromUrl(Astro.url);
---

<section>
  <header>
    <h2>{header[lang].title}</h2>
  </header>
  <p>{header[lang].description}</p>
  {
    projects.map(({ url, ...project }) => (
      <ProjectCard
        {...project}
        url={url as PathKey}
        image={selectImage({ title: project.id, images: thumbnails })}
      />
    ))
  }
</section>
<style>
  section {
    display: grid;
    gap: calc(var(--fs-s));
    place-items: center;
  }
  header {
    width: 100%;
    max-width: 1240px;
    position: relative;
  }
  h2 {
    width: fit-content;
    text-align: center;
    font-weight: 600;
    padding-inline-end: var(--fs-xs);
    font-size: var(--fs-xl);
    color: var(--h-text-clr);
    background-color: var(--bg-clr);

    &::after {
      position: absolute;
      z-index: -1;
      right: 0;
      top: 60%;
      content: "";
      background-color: var(--inverse-bg-clr);
      width: 100%;
      height: 2px;
    }
  }
  p {
    max-width: 1240px;
    margin: 0;
  }
</style>
