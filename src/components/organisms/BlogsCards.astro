---
import BlogCard from "@/components/molecules/BlogCard.astro";
import { selectImage } from "@/js/utils";
import { blogsHero } from "@/i18n/ui";
import { getLangFromUrl } from "@/i18n/utils";
import { Blogs } from "@/i18n/types";

const blogs = Object.values(Blogs);

const thumbnails = Object.entries(
  import.meta.glob<{ default: ImageMetadata }>(
    "@/assets/images/blogs/thumbnails/*.{jpg,jpeg,png}",
    {
      eager: true,
    }
  )
);
const lang = getLangFromUrl(Astro.url);
const header = {
  es: {
    title: "Nuestros Puentes de Conocimiento",
    description:
      "Ciencia que cruza fronteras, educación que transforma, y justicia social que toma voz. Tres miradas para entender el mundo y construirlo desde la conciencia. En estos blogs compartimos ideas, historias y reflexiones que nos invitan a pensar distinto y actuar con propósito.",
  },
  en: {
    title: "Our Bridges of Knowledge",
    description:
      "Science that crosses borders, education that transforms, and social justice that finds its voice. Three perspectives to understand the world and build it with awareness. In these blogs, we share ideas, stories, and reflections that invite us to think differently and act with purpose.",
  },
  pt: {
    title: "Nossas Pontes do Conhecimento",
    description:
      "Ciência que cruza fronteiras, educação que transforma e justiça social que ganha voz. Três olhares para compreender o mundo e construí-lo com consciência. Nestes blogs, compartilhamos ideias, histórias e reflexões que nos convidam a pensar de forma diferente e agir com propósito.",
  },
};
---

<section>
  <header>
    <h2>{header[lang].title}</h2>
  </header>
  <p>{header[lang].description}</p>
  <div>
    {
      blogs.map((blog) => (
        <BlogCard
          color={blogsHero.color[blog]}
          iconName={blogsHero.iconName[blog]}
          title={blogsHero[blog][lang].title}
          description={blogsHero[blog][lang].description}
          url={`/${blog}`}
          image={selectImage({ title: blog, images: thumbnails })}
        />
      ))
    }
  </div>
</section>
<style>
  section,
  div {
    display: grid;
    gap: var(--fs-s);
    place-items: center;
  }

  header {
    width: 100%;
    max-width: 1240px;
    position: relative;
  }
  h2 {
    width: fit-content;
    text-align: center;
    font-weight: 600;
    padding-inline-end: var(--fs-xs);
    font-size: var(--fs-xl);
    color: var(--h-text-clr);
    background-color: var(--bg-clr);

    &::after {
      position: absolute;
      z-index: -1;
      right: 0;
      top: 60%;
      content: "";
      background-color: var(--inverse-bg-clr);
      width: 100%;
      height: 2px;
    }
  }
  p {
    max-width: 1240px;
    margin: 0;
  }

  @media screen and (width >= 1440px) {
    div {
      width: 100%;
      max-width: 1440px;
      grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
    }
  }
</style>
