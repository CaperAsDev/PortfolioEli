---
import { Image } from "astro:assets";
import { getLangFromUrl } from "@/i18n/utils";

import type { LangKey } from "@/i18n/consts";
import type { ImageMetadata } from "astro";
import type { PathKey } from "@/i18n/types";

interface Props {
  name: {
    [key in LangKey]: string;
  };
  description: {
    [key in LangKey]: string;
  };
  image: ImageMetadata;
  url: PathKey;
  id: string;
}
const lang = getLangFromUrl(Astro.url);

const { name, description, image, url } = Astro.props;

const callsToAction = {
  en: "View Project",
  es: "Ver Proyecto",
  pt: "Ver Projeto",
};
const hrefBase = lang == "en" ? Astro.url.origin : Astro.url.href;
---

<article>
  <div class="info">
    <h2>{name[lang]}</h2>
    <p>{description[lang]}</p>
    <a href={`${hrefBase}${url}`}>{callsToAction[lang]}</a>
  </div>
  <p class="title">{name[lang]}</p>
  <Image src={image} alt={"illustrative image"} />
</article>
<style>
  article {
    position: relative;
    display: grid;
    place-items: center;
    width: 100%;
    height: 400px;
    border-radius: var(--fs-xs);
    overflow: hidden;
    color: oklch(from var(--ligth) l c h);
    background-color: oklch(from var(--dark-bg-clr) l c h);
  }
  .info {
    height: 100%;
    display: grid;
    grid-template-rows: auto 1fr auto;
    padding: var(--fs-xs);
    font-weight: 200;
    place-items: center;
    p {
      text-align: left;
      padding: var(--fs-xs);
      overflow: hidden;
    }

    a {
      /* width: fit-content; */
      width: 100%;
      align-self: flex-end;
      font-weight: 400;
      padding: var(--fs-xs);
      /* border-radius: var(--fs-xs); */
      background-color: oklch(from var(--secondary-0) l c h);
      color: oklch(from var(--primary-0) l c h);
      text-align: center;

      &:hover {
        color: var(--primary-0);
        background-color: oklch(from var(--secondary-0) calc(l - 0.1) c h);
      }
    }
  }

  h2 {
    color: var(--light);
    font-size: var(--fs-m);
    font-weight: 400;
  }

  .title {
    position: absolute;
    padding: var(--fs-xs);
    bottom: -1px;
    right: 0;
    width: 100%;
    text-align: end;
    color: var(--primary-0);
    z-index: 10;
    font-weight: 600;
    backdrop-filter: blur(5px) brightness(0.5);
    pointer-events: none;
  }

  img {
    position: absolute;
    width: 100%;
    height: 100%;
    object-fit: cover;
    object-position: center;
    transition: opacity 0.5s;
    pointer-events: none;
  }
  article:hover :is(.title, img),
  article:focus-within :is(.title, img) {
    opacity: 0;
  }

  @media screen and (width >= 768px) {
    article {
      width: clamp(calc(500px + 5vw), 45%, calc(800px + 5vw));
      height: clamp(calc(400px + 5vw), 20vw, 600px);
    }
  }
</style>
