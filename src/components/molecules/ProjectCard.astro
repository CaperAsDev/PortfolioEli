---
import Image from "astro/components/Image.astro";

interface Props {
  name: string;
  description: string;
  image: string;
  url: string;
  id: number;
}

const { name, description, image, url, id } = Astro.props;
const baseUrl = import.meta.env.BASE_URL;
---

<article>
  <div class="info">
    <h2>{name}</h2>
    <p>{description}</p>
    <a href={`${baseUrl}${url}`}>View project</a>
  </div>
  <p class="title">{name}</p>
  <Image src={image} alt={"illustrative image"} inferSize />
</article>
<style define:vars={{ image: image.trim() }}>
  article {
    position: relative;
    display: grid;
    place-items: center;
    margin-block: 2rem;
    width: clamp(500px, 50%, 800px);
    aspect-ratio: 2 / 1;
    flex-grow: 1;
    color: var(--primary-3);
    /* background-image: linear-gradient(
      to bottom,
      transparent,
      oklch(from var(--terciary-2) l c h / 0.3),
      oklch(from var(--terciary-1) l c h / 0.7),
      oklch(from var(--terciary-0) l c h / 0.5)
    ); */
    background-color: oklch(from var(--terciary-0) l c h / 0.5);
  }
  .info {
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    width: 100%;
    height: 100%;
    padding: 1rem;
    font-weight: 200;

    p {
      text-align: center;
    }

    a {
      align-self: flex-end;

      &:hover {
        color: var(--primary-1);
      }
    }
  }

  h2 {
    font-size: var(--fs-m);
    font-weight: 400;
  }

  .title {
    position: absolute;
    padding: var(--fs-xs);
    bottom: 0;
    right: 0;
    width: 100%;
    text-align: end;
    color: var(--primary-3);
    z-index: 10;
    font-weight: 600;
    backdrop-filter: blur(5px) brightness(0.5);
    pointer-events: none;
  }

  img {
    position: absolute;
    width: 100%;
    height: 100%;
    object-fit: cover;
    transition: opacity 0.5s;
    pointer-events: none;
  }
  article:hover :is(.title, img),
  article:focus-within :is(.title, img) {
    opacity: 0;
  }
</style>
